name: Build and Publish Multi-Architecture Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_HUB_REPOSITORY: arvindand/maven-tools-mcp

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Java 24
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Make mvnw executable
      run: chmod +x ./mvnw

    - name: Build with Maven
      run: ./mvnw clean package -DskipTests

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push image
      run: |
        PROJECT_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout 2>/dev/null || echo "1.1.1")
        
        # Build and push multi-architecture native image
        ./mvnw -Pnative spring-boot:build-image \
          -Dspring-boot.build-image.imageName=arvindand/maven-tools-mcp:${PROJECT_VERSION} \
          -Dspring-boot.build-image.tags=arvindand/maven-tools-mcp:latest \
          -Dspring-boot.build-image.publish=true \
          -Ddocker.publishRegistry.username="${{ secrets.DOCKER_HUB_USERNAME }}" \
          -Ddocker.publishRegistry.password="${{ secrets.DOCKER_HUB_TOKEN }}"

  test-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Java 24
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Make mvnw executable
      run: chmod +x ./mvnw

    - name: Build and test PR
      run: |
        ./mvnw clean package -DskipTests
        ./mvnw -Pnative spring-boot:build-image \
          -Dspring-boot.build-image.imageName=maven-tools-mcp:pr-${{ github.event.number }}
        
        # Test the image
        timeout 30s docker run --rm -e SPRING_PROFILES_ACTIVE=docker maven-tools-mcp:pr-${{ github.event.number }} --help || true